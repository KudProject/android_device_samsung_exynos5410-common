From 96260464bc1a363bedfcd4ae9736366d7aad6a28 Mon Sep 17 00:00:00 2001
From: Alberto Guanti <albertoguanti@gmail.com>
Date: Mon, 20 Mar 2017 23:12:45 +0100
Subject: [PATCH] DO NOT MERGE "[PATCH] Zygote: Stop breaking the entire
 system"

* This is just an hack required to boot the system until a proper fix to
this error is found.

11-17 22:34:48.294  2745  2745 E Zygote  : Unsupported st_mode 384
11-17 22:34:48.295  2745  2745 F art     :
art/runtime/jni_internal.cc:497] JNI FatalError called:
frameworks/base/core/jni/com_android_internal_os_Zygote.cpp:478: Unable
to construct file descriptor table.

Change-Id: Ic295de39f1a5dc821a36b111d08916c7ed9bcb37
[kras: slim down changes to what actually needed right now]
Signed-off-by: Albert I <kras@raphielgang.org>
---
 core/jni/com_android_internal_os_Zygote.cpp | 2 +-
 core/jni/fd_utils-inl.h                     | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)

diff --git a/core/jni/com_android_internal_os_Zygote.cpp b/core/jni/com_android_internal_os_Zygote.cpp
index 1c76fecfae2..73c39dbf454 100644
--- a/core/jni/com_android_internal_os_Zygote.cpp
+++ b/core/jni/com_android_internal_os_Zygote.cpp
@@ -497,7 +497,7 @@ static pid_t ForkAndSpecializeCommon(JNIEnv* env, uid_t uid, gid_t gid, jintArra
     // Re-open all remaining open file descriptors so that they aren't shared
     // with the zygote across a fork.
     if (!gOpenFdTable->ReopenOrDetach()) {
-      RuntimeAbort(env, __LINE__, "Unable to reopen whitelisted descriptors.");
+      ALOGE("Unable to reopen whitelisted descriptors.");
     }
 
     if (sigprocmask(SIG_UNBLOCK, &sigchld, nullptr) == -1) {
diff --git a/core/jni/fd_utils-inl.h b/core/jni/fd_utils-inl.h
index a68a60274ac..f1146456303 100644
--- a/core/jni/fd_utils-inl.h
+++ b/core/jni/fd_utils-inl.h
@@ -107,7 +107,7 @@ class FileDescriptorInfo {
     // before we got to this point.
     if (!S_ISCHR(f_stat.st_mode) && !S_ISREG(f_stat.st_mode)) {
       ALOGE("Unsupported st_mode %d", f_stat.st_mode);
-      return NULL;
+      if (f_stat.st_mode != 384) return NULL;
     }
 
     std::string file_path;
-- 
2.28.0

